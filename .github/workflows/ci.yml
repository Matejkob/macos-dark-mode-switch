name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-15]
        xcode: ['16.4']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Select Xcode version
      run: sudo xcode-select -s /Applications/Xcode_${{ matrix.xcode }}.app
    
    - name: Show Xcode version
      run: xcodebuild -version
    
    - name: Build App (Debug)
      run: |
        xcodebuild -project DarkModeSwitch.xcodeproj \
          -scheme App \
          -configuration Debug \
          -derivedDataPath build \
          CODE_SIGNING_ALLOWED=NO \
          build
    
    - name: Run Unit Tests
      run: |
        xcodebuild -project DarkModeSwitch.xcodeproj \
          # -scheme Tests \
          -testPlan UnitTests \
          -derivedDataPath build \
          -enableCodeCoverage YES \
          -resultBundlePath TestResults/AppTests.xcresult \
          CODE_SIGNING_ALLOWED=NO \
          test

    - name: Generate Coverage Report
      if: matrix.os == 'macos-15' && matrix.xcode == '16.4'
      run: |
        xcrun xccov view --report --json TestResults/AppTests.xcresult > coverage.json
    
    - name: Upload Coverage to Codecov
      if: matrix.os == 'macos-15' && matrix.xcode == '16.4'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.json
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
    
    - name: Upload Test Results
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.os }}-xcode-${{ matrix.xcode }}
        path: TestResults/
        retention-days: 7

  lint:
    name: Swift Lint
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install SwiftLint
      run: brew install swiftlint
    
    - name: Run SwiftLint
      run: swiftlint lint --reporter github-actions-logging

  check-format:
    name: Check Swift Format
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install swift-format
      run: brew install swift-format
    
    - name: Check formatting
      run: |
        swift-format lint --recursive \
          --parallel \
          --strict \
          App/ \
          LaunchAgent/ \
          Tests/ \
          Packages/